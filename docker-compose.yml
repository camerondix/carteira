services:
  backend:
    build: backend
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/carteira
      - SPRING_DATASOURCE_USERNAME=carteira
      - SPRING_DATASOURCE_PASSWORD=<@R+31r@
      - SPRING_GRAPHQL_CORS_ALLOWCREDENTIALS=true
      - SPRING_GRAPHQL_CORS_ALLOWEDORIGINS_0=${ALLOWED_ORIGIN}
      - PLAID_URL=${PLAID_URL}
      - PLAID_CLIENTID=${PLAID_CLIENT_ID}
      - PLAID_SECRET=${PLAID_SECRET}
      - PLAID_TOKENS_0=${PLAID_TOKEN_0}
      - PLAID_TOKENS_1=${PLAID_TOKEN_1}
      - PLAID_TOKENS_2=${PLAID_TOKEN_2}
      - PLAID_TOKENS_3=${PLAID_TOKEN_3}
      - PLAID_TOKENS_4=${PLAID_TOKEN_4}
      - PLAID_TOKENS_5=${PLAID_TOKEN_5}
      - PLAID_TOKENS_6=${PLAID_TOKEN_6}
      - PLAID_TOKENS_7=${PLAID_TOKEN_7}
      - PLAID_TOKENS_8=${PLAID_TOKEN_8}
      - PLAID_TOKENS_9=${PLAID_TOKEN_9}
    networks:
      - react-spring
      - spring-postgres
    depends_on:
      - db
    ports:
      - 8880:8080
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=carteira
      - POSTGRES_PASSWORD=<@R+31r@
      - POSTGRES_DB=carteira
    networks:
      - spring-postgres
    volumes:
      - ${DB_VOLUME}:/var/lib/postgresql/data
  frontend:
    build:
      context: frontend
      args:
        - REACT_APP_GRAPHQL_URL=${GRAPHQL_URL}
        - REACT_APP_APOLLO_CLIENT_CREDENTIALS=include
    restart: always
    ports:
      - 3800:80
    networks:
      - react-spring
    depends_on:
      - backend
networks:
  react-spring:
  spring-postgres:
